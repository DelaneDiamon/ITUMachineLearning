\documentclass[12pt]{article}
\title{Homework 1}
\author{Dmitrii Dunin, ITU ID 94739}
%\DeclareGraphicsExtensions{.png,.pdf}
\begin{document}
\SweaveOpts{concordance=TRUE,prefix.string=Dmitrii}
\begin{center}
{\bf\Large Homework 1}
\linebreak
\linebreak
{\bf\Large Dmitrii Dunin 94739}
\linebreak
\linebreak
{\bf\Large International Technological University}
\end{center}
<<label=Setup1 ,echo=FALSE,results=hide>>=
rm(list=ls())
require(graphics)
require(stringr)
require(dplyr)
@
\begin{center}
{\bf\Large Question 1 - Qualitative and Quantitative data}
\linebreak
\end{center}
1.This question uses the data HW01pb1data.csv. 
Download it to your computer.
\tabularnewline
a) Read in the data in R using\\
\tabularnewline
InputData<-read.csv("HW01pb1data.csv",header=FALSE). 
Note, you first needto specify your working directory using 
the setwd() command. Determine whether each of the attributes (columns) 
are treated as qualitative (categorical) or quantitative
(numeric) using R. Explain how you can tell using R.


Reading the data:
<<label=ReadData>>=
setwd("F:/Workspace/R/Homework1")
InputData<-read.csv("HW01pb1data.csv",header=FALSE)
@

Identifying column types:
<<label=IdentifyColumns>>=
str(InputData)
@
\begin{itemize}
\item{First 3 columns (V1, V2, V3) are of \textbf{integer} type, so they are \textbf{quantitative}}
\item{Last 2 columns (V4, V5) are of \textbf{factor} type, so they are \textbf{nominal categorical} or \textbf{qualitative}}
\end{itemize}

If some data cannot be converted to numeric, it will stay as character data.
One way we can check this is to output levels of factors V4 and V5.
\newpage
b) What is the specific problem that causes two of these attributes to be read in as
qualitative (categorical) when it seems it should be quantitative (numeric)?
We investigate levels of V4 and produce a vector with true/false values
after is.numeric function on a factor.
<<label=LevelsV4>>=
levels(InputData$V4)
boolean_vector <- as.numeric(levels(InputData[,4]))
@
Then we will indentify index(s) in the boolean vector we just produced, which corresponds
to NA - entities which could not be converted to numbers.
<<label=IndexOfNAInLevelsV4>>=
index_of_na<-which(is.na(boolean_vector))
index_of_na
@
Then we will look for that value amoung the levels of V4
<<label=NonNumeringInLevelsV4>>=
non_numeric_value<-levels(InputData[,4])[index_of_na]
non_numeric_value
row_number_V4 <- which(InputData[,4] == non_numeric_value)
row_number_V4
@
Do the same for V5
<<label=SameForV5>>=
levels(InputData$V5)
boolean_vector <- as.numeric(levels(InputData[,5]))
index_of_na<-which(is.na(boolean_vector))
index_of_na
non_numeric_value<-levels(InputData[,5])[index_of_na]
non_numeric_value
row_number_V5 <- which(InputData[,5] == non_numeric_value)
row_number_V5
@
We may observe that in V4 there is a string "thirty five", in V5 there is a string "twenty five".
Those two non-numeric pieces of data made those observations put into factors.
\newpage
c) Use the command plot() in R to make a plot for column 1 by entering
plot(InputData[,1]). Use a similar command to plot column 4 (that is plot(InputData[,4])).
Because one variable is read in as quantitative (numeric) and the other as qualitative
(categorical) these two plots are showing completely different things by default. Explain
exactly what is being plotted in each case. Include these plots in your homework.

<<label=PlotInputData1, fig=TRUE>>=
plot(InputData[,1], main="Plot for numeric vector V1")
@
\tabularnewline
In this case plot illustrates distribution of numeric data pieces location under specified 
indexes in the integer vector. 
Example: 
\begin{itemize}
\item {Integer "between 100 and 150" has index of "around 800" (In fact, integer 125, index 788)}
\item {Highest integer is around 280 with index almost 0 (In fact, integer 270, index 13)}
\end{itemize}

\newpage
<<label=PlotInputData2, fig=TRUE>>=
plot(InputData[,4], main="Plot for categorical factor V4")
@

This plot demonstrates the number of occurencies of each category in the factor.
Example: 
\begin{itemize}
\item {"5" has almost 150 occurrencies (In fact, "5" has 149 occurencies)}
\end{itemize}

\newpage
d) (optional) Read the data into Excel. Excel should have no problem opening the file
directly since it is .csv. Create a new column that is equal to the forth column plus 10.
What is the result for the problem observations (rows) you identified in part b? What
specific outcome does Excel display?
\tabularnewline
Excel will show \#VALUE! in the cell which could not calculate "thirty five" + 10 (index 405)
\newpage

\begin{center}
{\bf\Large Question 2 - Data Sampling}
\linebreak
\end{center}

2) This question uses the data in the file HW01pb2data.csv. Download it to your
computer.
\tabularnewline
a) Read the data into R using
InputData<-read.csv("HW01pb2data.csv",header=FALSE). Note, you first need
to specify your working directory using the setwd() command. Extract a simple random
sample with replacement of 10,000 observations (rows). (Hint: R has a function called
sample) Show your R commands for doing this.
<<label=Setup2 ,echo=FALSE,results=hide>>=
rm(list=ls())
InputData<-read.csv("HW01pb2data.csv",header=FALSE)
@
<<label=Sample>>=
result_sample<-sample(InputData$V1, 10000, replace=TRUE)
@
b) For your sample, use the functions mean(), max(), var() and quantile(,.25) to computethe mean, 
maximum, variance and 1st quartile respectively. Show your R code and the resulting values
\tabularnewline
<<label=SampleCalculations>>=
mean_sample<-mean(result_sample)
max_sample<-max(result_sample)
var_sample<-var(result_sample)
quantile_sample<-quantile(result_sample, .25)
@
<<label=SampleOutput>>=
mean_sample
max_sample
var_sample
quantile_sample
@

\newpage
c) Compute the same quantities in part b on the entire data set and show your answers.
How much do they differ from your answers in part b?
<<label=FullSetCalculations>>=
mean_full<-mean(InputData$V1)
max_full<-max(InputData$V1)
var_full<-var(InputData$V1)
quantile_full<-quantile(InputData$V1, .25)
@
<<label=FullSetOutput>>=
mean_full
mean_full - mean_sample

max_full
max_full - max_sample

var_full
var_full - var_sample

quantile_full
quantile_full - quantile_sample
@

d) (Optional Part) Save your sample from R to a csv file using the command write.csv().
Then open this file with Excel and compute the mean, maximum, variance and 1st
quartile. Provide the values and name the Excel functions you used to compute these.
\tabularnewline
<<label=WriteSample,echo=FALSE, results=hide>>=
write.csv(result_sample,"ResultSample.csv")
functions<-c("TRIMMEAN",	"MAX",	"VAR", "QUARTILE")
excel_results<-c("9.430558845",	"16.99675955",	"4.016940173",	"8.071343166")
sample_results<-c(mean_sample, max_sample, var_sample, quantile_sample)
fn_res_table<-rbind(functions, excel_results, sample_results)
@
\tabularnewline
The following results were obtained from Excel (current sample results are in the last row):
\tabularnewline
<<label=ExcelResultsTable, echo=True, results=tex>>=
library(xtable)
xtable(fn_res_table)
@


e) (Optional Part) Exactly what happens if you try to open the full data set with Excel?
\tabularnewline
Excel will load only part of the file (in my case only 1048576 rows) and display the message
"File not loaded completely."
\newpage


\begin{center}
{\bf\Large Question 3 - Ocean and Desert Houses Data}
\linebreak
\end{center}

3) This question uses a sample of 2000 Ocean View house prices in the file
HW01pb3OceanViewdata.csv and a sample of 5000 Desert house prices in the file
HW01pb3Desertdata.csv. Download both data sets to your computer. Note that the
house prices are in thousands of dollars. (Hint: look at the file MyFirstRLesson.r)
\tabularnewline
<<label=Setup3 ,echo=FALSE,results=hide>>=
rm(list=ls())
InputDataOcean<-read.csv("HW01pb3OceanViewdata.csv",header=FALSE)
InputDataDesert<-read.csv("HW01pb3Desertdata.csv",header=FALSE)
@

a) Use R to produce a single graph displaying a box plot for each set.
Include the R commands and the plot. Put a name in the title of the plot (for example,
main="House Box Plots"). Explain the box plot.

<<label=OceanHousesPlot, fig=TRUE>>=
prices_ocean<-InputDataOcean[,1]*1000
boxplot(prices_ocean, main="Ocean Houses")$stats[c(1,2,5),]
@

Ocean houses boxplot illustrates that Q1-Q3 for ocean houses is around \$1.4M-\$1.6M. 
There are several outliers which prices are even above supposed "maximum" (Q3 + 1.5*IQR)
of \$1,966,000.00 and just a couple of ouliers on the "minimum" end.

\newpage
<<label=DesertHousesPlot, fig=TRUE>>=
prices_desert<-InputDataDesert[,1]*1000
boxplot(prices_desert, main="Desert Houses")$stats[c(1,2,5),]
@

In this plot the situation is a bit different. There are plenty of outliers, above "maximum"
of \$353,000.00, but majority of the house prices stay near mean of \$51,000.00

\newpage
b) Use R to produce a frequency histogram for only the Ocean View house prices. 
Use intervals of width \$250,000 beginning at 0 and ending at \$3 million. 
Include the R commands and the plot. 
Create an appropriate title for the plot. (Hint: Use the hist R command)
<<label=OceanHousesHist, fig=TRUE>>=
breaks_hist<-seq(0, 3000000, 250000)
hist(prices_ocean, main="Ocean Houses", freq=TRUE, breaks=breaks_hist, xlab = "Ocean House Price")
@

\newpage
c) The empirical cumulative distribution function is described in the web site:
http://en.wikipedia.org/wiki/ECDF Use R to plot the ECDF of the Ocean View houses.
Make another ECDF plot of the Desert houses. Place both plots on the same page.
Include legends. Include the R commands and the plot. Create a title for each plot.


<<label=OceanHousesECDF, fig=TRUE, include=FALSE>>=
plot(ecdf(prices_ocean), 
     main="Ocean Houses ECDF", 
     col.points = "blue",
     col.hor = "red")
legend(mean(prices_ocean), 
       0.2,
       c("Limit values","Observations"),
       col=c("red","blue"),
       lty=c("solid","dashed"))

@
<<label=DesertHousesECDF, fig=TRUE, include=FALSE>>=
plot(ecdf(prices_desert), 
     main="Ocean Houses ECDF", 
     col.points = "orange",
     col.hor = "red")
legend(mean(prices_desert)*2, 
       0.2,
       c("Limit values","Observations"),
       col=c("red","orange"),
       lty=c("solid","dashed"))
@
\begin{figure}
\includegraphics{Dmitrii-OceanHousesECDF}
\includegraphics{Dmitrii-DesertHousesECDF}
\end{figure}

\newpage
\begin{center}
{\bf\Large Question 4 - Orange Trees Data}
\linebreak
\end{center}

4) This question uses the Orange data set which is included in the R download. Type in
the r command: orange <- as.data.frame(Orange). The data frame, orange,
consists of three columns: Tree, age, and circumference.
<<>>=
orange <- as.data.frame(Orange)
@
<<>>=
summary(orange)
str(orange)
@

a) Use plot() in R to make a scatter plot for this data with age on the x-axis and
circumference on the y-axis. What range should be given for the x-axis? What about
the y-axis range? Create an appropriate title for the plot. Include the R commands and
the plot.

<<label=OrangePlot, echo=TRUE, fig=TRUE, include=FALSE>>=
min_age = trunc(min(orange[,2]))
max_age = trunc(max(orange[,2]))
number_of_axis_points = 25
plot(orange[,2], 
     orange[,3], 
     main = "Age vs Circumference", 
     xlab = "Age", 
     ylab = "Circumference", 
     xaxt="n")
axis(1, 
     xaxp=c(min_age - (min_age%%number_of_axis_points), 
            max_age + (number_of_axis_points - max_age%%number_of_axis_points), 
            number_of_axis_points), 
     las=2)
@
\includegraphics{Dmitrii-OrangePlot}
\linebreak
b) Compute the correlation between the age and circumference of the first tree in R
using the function cor().
<<echo=TRUE, results=verbatim>>=
cor(orange[,2], orange[,3], use = "everything")
@

c) For this problem you may want to use some the following R functions: names, merge,
cov, and cor. Create a covariance - correlation chart which has the covariance andcorrelation of the age and circumference for each tree. Have your code print out the
following chart with the same titles and the values filled in.
\linebreak
<<echo=TRUE, results=verbatim>>=
o1<-subset(orange, orange$Tree == 1)
o2<-subset(orange, orange$Tree == 2)
o3<-subset(orange, orange$Tree == 3)
o4<-subset(orange, orange$Tree == 4)
o5<-subset(orange, orange$Tree == 5)

cov.df <- data.frame("fac" = factor(1:5),
                     "cov" = c(cov(o1$age, o1$circumference),
                               cov(o2$age, o2$circumference),
                               cov(o3$age, o3$circumference),
                               cov(o4$age, o4$circumference),
                               cov(o5$age, o5$circumference)))

cor.df <- data.frame("fac" = factor(1:5),
                     "cor" = c(cor(o1$age, o1$circumference),
                               cor(o2$age, o2$circumference),
                               cor(o3$age, o3$circumference),
                               cor(o4$age, o4$circumference),
                               cor(o5$age, o5$circumference)))

chart <- merge(cov.df, cor.df,by.x = "fac", by.y = "fac")
names(chart) <- c("ORANGE TREES","COVARIANCE","CORRELATION")
row.names(chart)<- c("O1","O2","O3","O4","O5")
chart
@

<<label=Setup5 ,echo=FALSE,results=hide>>=
rm(list=ls())
InputDataDesert<-read.csv("HW01pb3Desertdata.csv",header=FALSE)
@

\newpage
\begin{center}
{\bf\Large Question 5 - Mean and Median Modification}
\linebreak
\end{center}
5) This question uses the sample of 5,000 Desert Houses from problem three.
<<label=SampleDesert>>=
sample_desert<-sample(InputDataDesert[,1]*1000, 5000)
@
a) What is the median value? Is it larger or smaller than the mean?
<<label=MedianDesert>>=
median_desert<-median(sample_desert)

mean_desert<-mean(sample_desert)
median_desert
mean_desert
@
.

b) What does your answer to part a) suggest about the shape of the distribution 
(rightskewed or left-skewed)? 
Does the distribution have more weight at one end? 
Is there a longer tail at the other? 
The distribution is skewed to the right if there is a long tail to the right. 
That is if the mean is greater than the median, 
the distribution is skewed to the right. 
A few high numbers will pull the mean above the median.

<<label=MedianMeanDesert>>=
median_desert - mean_desert
@
\tabularnewline
In this case median is less than the mean, and distribution is right-skewed

\tabularnewline

c) How does the median change if you add 10 (thousand dollars) to all the values?
<<label=MedianDesertPlus10>>=
median_desert_plus<-median(sample_desert+10000)
median_desert_plus
median_desert
median_desert_plus - median_desert

mean_desert_plus<-mean(sample_desert+10000)
mean_desert
mean_desert_plus

@
Plain increase by 10000

d) How does the median change if you multiply all the values by 2?
<<label=MedianDesertMultiply2>>=
median_desert_multiply<-median(sample_desert*2)
median_desert_multiply
median_desert
median_desert_multiply - median_desert
median_desert_multiply %/% median_desert
@
Plain two times increase 


\end{document}

